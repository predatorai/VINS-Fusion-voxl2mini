%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/imu_apps"  # imu0
# imu_topic: "/imu_raw"  # imu1
# imu_topic: "/imu0"
# imu_topic: "/imu1"
# image0_topic: "/cam1/image_raw"
# image0_topic: "/cam2/image_raw"
# image0_topic: "/cam3/image_raw"
# image0_topic: "/lepton0_raw"
# image0_topic: "/lepton0_raw_minmax"
# image0_topic: "/lepton_fish_8bit"
image0_topic: "/lepton57_8bit"
# image0_topic: "/boson"

output_path: "~/output/"

# cam0_calib: "cam1_pinhole.yaml"
cam0_calib: "cam2_pinhole.yaml"
# cam0_calib: "cam3_pinhole_boson.yaml"

image_width: 160
image_height: 120
# image_width: 640
# image_height: 512


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   # T_ic:  (cam1 to imu0): 
   # lepton fisheye radtan
   # data: [-0.00320273, -0.99197124,  0.12642308, -0.00062295,
   #         0.99966081,  0.00009157,  0.02604333,  0.00107125,
   #        -0.02584581,  0.12646361,  0.99163448, -0.00501907,
   #         0.        ,  0.        ,  0.        ,  1.        ]

   # lepton57
   # data: [-0.04797276, -0.99828998,  0.03340256, -0.06125335,
   #         0.99883869, -0.04779612,  0.00606723,  0.03785457,
   #        -0.00446034,  0.03365483,  0.99942356,  0.00845617,
   #         0.        ,  0.        ,  0.        ,  1.        ]
   # vins optimized on calib bag
   # data: [-0.00792407, -0.99981406,  0.01758022,  0.01083055,
   #         0.9998778 , -0.00815905, -0.01333494,  0.02143264,
   #         0.0134759 ,  0.0174724 ,  0.99975653,  0.01212692,
   #         0.        ,  0.        ,  0.        ,  1.        ]

   # boson
   # data: [-0.00458184, -0.99991368,  0.01231452,  0.00173886,
   #         0.99984875, -0.00437424,  0.01683256, -0.00123464,
   #        -0.01677724,  0.01238978,  0.99978249,  0.00007119,
   #         0.        ,  0.        ,  0.        ,  1.        ]
   # vins optimized on calib bag
   # data: [ 0.00817211, -0.99964123,  0.02550745, -0.01266049,
   #         0.99995381,  0.00829842,  0.00485   , -0.08877699,
   #        -0.00505993,  0.02546664,  0.99966287,  0.0136072 ,
   #         0.        ,  0.        ,  0.        ,  1.        ]
   # lepton95 - 9/5
   # data: [-0.99964335, -0.0250689 , -0.00920492, -0.00044393,
   #        -0.02474421,  0.99912098, -0.03383786, -0.00073403,
   #         0.01004511, -0.03359802, -0.99938495,  0.00047487,
   #         0.        ,  0.        ,  0.        ,  1.        ]
   # vins optimized on calib bag
   # data: [-0.99950522,  0.02969048,  0.01038177, -0.01649786,
   #         0.02923453,  0.99870608, -0.04161135, -0.01766336,
   #        -0.0116038 , -0.04128726, -0.99907993,  0.01585696,
   #         0.        ,  0.        ,  0.        ,  1.        ]
   # lepton57 - 9/5
   # data: [-0.03465919,  0.99854554, -0.04129817, -0.00217747,
   #         0.99883434,  0.03599914,  0.03215621,  0.00017184,
   #         0.03359614, -0.04013552, -0.99862928, -0.00006408,
   #         0.        ,  0.        ,  0.        ,  1.        ]
   # vins optimized on calib bag
   data: [ 0.00770705,  0.99924668, -0.03803524, -0.02124284,
           0.99956158, -0.00661092,  0.02886085,  0.05134566,
           0.02858766, -0.038241  , -0.99885954,  0.00284112,
           0.        ,  0.        ,  0.        ,  1.        ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
# min_dist: 30            # min distance between two features 
# min_dist: 20            # min distance between two features 
min_dist: 8            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation.
                        # If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

# Failure detection parameters
max_insufficient_feature_frames: 20
max_acceleration: 100.0     # Maximum allowed acceleration (m/s^2)
max_angular_vel: 5.0       # Maximum allowed angular velocity (rad/s)
max_translation: 25.0       # Maximum translation between frames (m)
max_rotation: 30.0         # Maximum rotation between frames (degrees)
min_tracked_features: 10   # Minimum number of tracked features
enable_failure_recovery: 1 # Enable/disable failure recovery

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 5.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance

# imu_apps, imu0
# acc_n: 0.05333
# acc_w: 0.00357402
# gyr_n: 0.0002
# gyr_w: 1.565e-06
# 10x or 2x
# acc_n: 0.10666
# acc_w: 0.0357402
# gyr_n: 0.0004
# gyr_w: 1.565e-05
# 10x - use these
# acc_n: 0.5333
# acc_w: 0.0357402
# gyr_n: 0.002
# gyr_w: 1.565e-05
# use these
# acc_n: 0.1
# acc_w: 0.01
# gyr_n: 0.01
# gyr_w: 0.001
acc_n: 0.1
acc_w: 0.001
gyr_n: 0.01
gyr_w: 0.0001

g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0
# td: 0.0                      # online estimate time offset between camera and imu
# td: -0.014681057646229663  # lepton57 imu0
# td: -0.012138  # vins estimated
# td: -0.06275731718629535  # boson
# td: -0.055409  # vins estimated
# td: -0.1911035228787078  # lepton fish radtan
# td: -0.004753499403623977  # lepton95 - 9/5
# td: -0.013534  # vins estimated
# td: -0.17591273124279797  # lepton57 - 9/5
td: -0.182360  # vins estimated

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
